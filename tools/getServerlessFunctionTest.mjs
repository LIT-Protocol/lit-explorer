import fetch from 'node-fetch';
import { writeToFile, asyncForEach } from './util.mjs';
import fs from 'fs';

/** ==================== Main ==================== */
const INPUT_ROOT = 'https://raw.githubusercontent.com/LIT-Protocol/js-serverless-function-test/main/js-sdkTests/';
const OUTPUT_FOLDER = '../DEMOs/';

const files = [
    'allTheParams.js',
    'authContext.js',
    'consoleAndResponse.js',
    'debug.js',
    'decrypt.js',
    'encodingTest.js',
    'ethers.js',
    'fetch.js',
    'hellolocalhost.js',
    'hellomumbai.js',
    'helloworld.js',
    'helloworldBLS.js',
    // 'helloworldFromIPFS.js',
    'litConditions.js',
    'multipleSigs.js',
    'nesting.js',
    'pkpPermissions.js',
    'signMsgAndCheckRecovery.js',
    'signRawAndCheckRecovery.js',
    // 'signTxn.js',
    // 'signTxnFromIPFS.js',
    // 'simpleConsole.js',
    // 'simpleResponse.js',
    'siwe.js',
];

const indexTs = [];
const indexTsFile = `${OUTPUT_FOLDER}index.ts`;
const autoText = `// This file is auto-generated by tools/getServerlessFunctionTest.mjs \n// ${new Date()}\n`;

writeToFile('', indexTsFile);
fs.appendFileSync(indexTsFile, autoText);

await asyncForEach(files, async (file) => {

    const filename = file.split('.')[0];

    const ext = '.ts';

    const URL = INPUT_ROOT + file;

    const data = await fetch(URL).then((res) => res.text());

    const regex = /`([^`]+)`/g;

    const litActionCode = data.match(regex);

    if( litActionCode !== null ) {
        const exportable = `${autoText} export const ${filename} = ${litActionCode[0]};`;
        writeToFile(exportable, `${OUTPUT_FOLDER}${filename}${ext}`);

        const text = `export * from './${filename}'\n`;
        fs.appendFileSync(`${OUTPUT_FOLDER}index.ts`, text);
    }
});